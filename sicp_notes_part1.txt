# Составные процедуры
(define (square x) (* x x) )
(define (sum-of-squares x y) (+ (square x) (square y)))
(define (f a) (sum-of-squares (+ a 1) (* a 2)))


# case analysis   (cond conditional)
(define (abs x) 
    (cond   ((> x 0) x)
            ((= x 0) 0)
            ((< x 0) (-x))))
# OR
(define (abs x) 
    (cond   ((< x 0) (-x))
            (else x)))
# OR
(define (abs x)  
    (if (< x 0) (-x)  x))
# (if (предикат) (следствие) (алтернатива))




# Exercise 1.3 
(define (test x y z) 
    (if (and (> x z) (> y z)) 
        (+ (* x x) (* y y)) 
        (if (and (> x y) (> z y)) 
            (+ (* x x) (* z z)) 
            (+ (* y y) (* z z)) 
)))
# OR
(define (test1 x y z) 
    (if (and (> x z) (> y z)) 
        ((sum-of-squares x y)) 
        (if (and (> x y) (> z y)) 
            (sum-of-squares x z)
            (sum-of-squares y z) 
)))





 
